<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"

    >

    <!--
        Reason for using the ConstraintLayout
        =====================================
        ConstraintLayout offers combined benefits of both LinearLayout and RelativeLayout. I am using
        it in this layout file, for:

        1. Positioning the CircularProgressBar horizontally centered in the parent view,
           with a bottom margin of 96dp.
    -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@drawable/splash_bg"
        tools:context=".onboarding.SplashFragment"
        >

        <com.mikhaellopez.circularprogressbar.CircularProgressBar
            android:id="@+id/circularProgressBar"
            android:layout_width="96dp"
            android:layout_height="96dp"
            android:layout_marginBottom="96dp"
            app:cpb_background_progressbar_color="#b6bbd8"
            app:cpb_background_progressbar_width="5dp"
            app:cpb_progress_direction="to_right"
            app:cpb_progressbar_color="#3f51b5"
            app:cpb_progressbar_width="10dp"
            app:cpb_round_border="false"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>