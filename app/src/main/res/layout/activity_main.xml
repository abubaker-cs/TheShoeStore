<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    >

    <!--
        Reason for using the CoordinateLayout
        =====================================
        Being as a super-powered FrameLayout, it is intended for:
        1. As a top-level application decor or chrome layout
        2. As a container for a specific interaction with one or more child views

        I am using CoordinatorLayout in this file for:
        1. Implementing the Toolbar
        2. @including the @layout/content_main

    -->
    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        >

        <com.google.android.material.appbar.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:theme="@style/Theme.ShoesPlanet.AppBarOverlay"
            >

            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                app:popupTheme="@style/Theme.ShoesPlanet.PopupOverlay"
                />

        </com.google.android.material.appbar.AppBarLayout>

        <include layout="@layout/content_main" />

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>